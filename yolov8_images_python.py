# -*- coding: utf-8 -*-
"""yolov8_images_python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/DatumLearning/yolov8-image-object-detection/blob/main/yolov8_images_python.ipynb

# Colab to test YOLO on a partial image

Best tutorial:
https://www.freecodecamp.org/news/how-to-detect-objects-in-images-using-yolov8/
"""

!pip install ultralytics -q
!pip install pyyaml -q

from ultralytics import YOLO
import yaml
from IPython.display import Image, display
#import cv2
#from google.colab.patches import cv2_imshow

# Set img
img = '/content/img/cat_full.png'

# Display the image with specific dimensions
display(Image(filename=img, width=250, height=250))

# Model setup
model = YOLO('yolov8n.pt')  # initialize model
results = model(img)  # perform inference
#results[0][0].show()  # display results for the first image

# Get confidence score
boxes = results[0].boxes.xywh.cpu()                        #xywh bbox list
id_lst = results[0].boxes.cls.cpu().tolist()                #classes Id list
names = results[0].names                                   #classes names list
confs = results[0].boxes.conf.float().cpu().tolist()       #probabilities of classes

print(confs[0])
id = [id_lst][0][0]
print(names[id])

"""# Testing Partial Views"""

# Set img
img = '/content/img/cat_fragment1.png'

# Display the image with specific dimensions
display(Image(filename=img, width=250, height=250))

# Model setup
model = YOLO('yolov8n.pt')  # initialize model

results = model(img)  # perform inference
#results[0][0].show()  # display results for the first image

# Get confidence score
boxes = results[0].boxes.xywh.cpu()                        #xywh bbox list
id_lst = results[0].boxes.cls.cpu().tolist()                #classes Id list
names = results[0].names                                   #classes names list
confs = results[0].boxes.conf.float().cpu().tolist()       #probabilities of classes

print(confs[0])
id = [id_lst][0][0]
print(names[id])

# Set img
img = '/content/img/cat_fragment2.png'

# Display the image with specific dimensions
display(Image(filename=img, width=250, height=250))

# Model setup
model = YOLO('yolov8n.pt')  # initialize model

results = model(img)  # perform inference
#results[0][0].show()  # display results for the first image

# Get confidence score
boxes = results[0].boxes.xywh.cpu()                        #xywh bbox list
id_lst = results[0].boxes.cls.cpu().tolist()                #classes Id list
names = results[0].names                                   #classes names list
confs = results[0].boxes.conf.float().cpu().tolist()       #probabilities of classes

print(confs[0])
id = [id_lst][0][0]
print("Class: "names[id])

"""# BEST WAY TO OBTAIN RESULTS IN A NEAT WAY"""

result = results[0]
box = result.boxes[0]
print("Probability:", box.conf.item())

class_id = box.cls[0].item()
print( class_id )
class_id = result.names[box.cls[0].item()]
print("Object type:", class_id)

